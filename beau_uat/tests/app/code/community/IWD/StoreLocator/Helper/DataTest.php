<?php
require_once(__DIR__ . '/../../../../../../../app/Mage.php');
/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-02-19 at 12:07:03.
 */
class IWD_StoreLocator_Helper_DataTest extends PHPUnit_Framework_TestCase {

    /**
     * @var IWD_StoreLocator_Helper_Data
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        Mage::app();
        $this->object = Mage::helper('storelocator');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }
    
    private function _dbr()
    {
        return Mage::getSingleton('core/resource')->getConnection('core/read');
    }
    
    /**
     * @test
     * @covers IWD_StoreLocator_Helper_DataTest
     * check for null fields that are required fields
     */
    public function checkNullFields()
    {
        $sql = "SELECT title,postal_code,country_id,region_id,street,is_active from iwd_storelocator 
		WHERE title IS NULL OR title = ''
		OR postal_code IS NULL OR postal_code = ''
		OR country_id IS NULL OR country_id = ''
		OR region_id IS NULL OR region_id = ''
		OR street IS NULL OR street = ''
		OR (is_active IS NULL OR is_active = '')
		";
        $result = $this->_dbr()->fetchOne($sql);
        fwrite(STDOUT, print_r($result, true) . "\n"); // Dumps result to the output window. Useful for debugging       
        
        $this->assertTrue(empty($result));
    }

    /**
     * @test
     * @covers IWD_StoreLocator_Helper_DataTest
     */
    public function checkDuplicateStore()
    {
        $sql = 'SELECT title, email, COUNT(*) FROM iwd_storelocator GROUP BY title, email  HAVING COUNT(*) > 1';
        $result = $this->_dbr()->fetchOne($sql);
        fwrite(STDOUT, print_r($result, true) . "\n"); // Dumps result to the output window. Useful for debugging       
        
        $this->assertTrue(empty($result));
    }

}
